#declare_args() {}




is_rtems = target_os == "rtems"
#is_linux = target_os == "linux"

if (is_rtems) {
  import("//build/toolchain/rtems/rtems.gni")
}

#========================
# CPU Architecture flags
#========================
config("compiler_cpu_abi") {
  cflags = []
  ldflags = []
  defines = []
  
  if (is_rtems) {
    if (target_cpu == "arm") {
      if (rtems_bsp == "realview_pbx_a9_qemu" ||
          rtems_bsp == "xilinx-zynq") {
        cflags += ["-march=armv7-a", "-mthumb", "-mfpu=neon", "-mfloat-abi=hard", "-mtune=cortex-a9"]
        
      } else if (rtems_bsp == "stm32f4") {
        cflags += ["-mthumb", "-mcpu=cortex-m4"]
        ldflags += ["-Wl,--gc-sections"]
        
      } else if (rtems_bsp == "stm32h7") {
        cflags += ["-mthumb", "-mcpu=cortex-m7", "-mfpu=fpv5-d16", "-mfloat-abi=hard"]

      } else {
        assert(false, "Unsupported target board")
      }
    } else {
      assert(false, "Unsupported CPU architecture")
    }
  } else if (target_os == "linux") {
    if (target_cpu != "x86" &&
        target_cpu != "x64") {
      assert(false, "Unsupported target cpu: $target_cpu")
    }
  } 
  
  asmflags = cflags
  ldflags = cflags
}

#========================
# default_include_dirs
#========================
config("default_include_dirs") {
  include_dirs = [
    "//",
    root_gen_dir,
  ]
  
  if (is_rtems) {
    include_dirs += ["$rtems_path/include"]
  }
}

#========================
# compiler
#========================
config("compiler") {
  asmflags = []
  cflags = []
  cflags_c = []
  cflags_cc = []
  cflags_objc = []
  cflags_objcc = []
  ldflags = []
  defines = []
  configs = []

  configs += [
    ":compiler_cpu_abi",
  ]
}

#========================
# rtti
#========================
config("no_rtti") {
  cflags_cc = [ "-fno-rtti" ]
}

#========================
# exceptions
#========================
config("no_exceptions") {
  cflags_cc = [ "-fno-exceptions" ]
}

#========================
# optimize
#========================
config("optimize") {
  if (is_debug) {
    cflags = ["-g", "-O0"]
  } else {
    cflags = ["-g", "-O2"]
  }
}

